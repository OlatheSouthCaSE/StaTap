

  public void onCreate(Bundle savedInstanceState)
    {
        <code>super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
//Initializing controls
        editGame_Num=(EditText)findViewById(R.id.editGame_Num);
        editHome_Team_Num=(EditText)findViewById(R.id.editHome_Team_Num);
        editAway_Team_Num=(EditText)findViewById(R.id.editAway_Team_Num);
        //Not sure about the DATE and not sure about the edit text or it should be edit number
        btnAdd=(Button)findViewById(R.id.btnAdd);//Adding a game
        btnDelete=(Button)findViewById(R.id.btnDelete);//Delete Button and change name
        btnModify=(Button)findViewById(R.id.btnModify);//Edit button and change name
        btnView=(Button)findViewById(R.id.btnView);//View button and change name
        btnViewAll=(Button)findViewById(R.id.btnViewAll);//View all button and change name
        btnShowInfo=(Button)findViewById(R.id.btnShowInfo);//Show info button and change name
//Registering even handlers
        btnAdd.setOnClickListener(this);//Read the comments above to match them up
        btnDelete.setOnClickListener(this);
        btnModify.setOnClickListener(this);
        btnView.setOnClickListener(this);
        btnViewAll.setOnClickListener(this);
        btnShowInfo.setOnClickListener(this);
//Creating database and table 
      db=openOrCreateDatabase("StaTap", Context.MODE_PRIVATE, null);
      db.execSQL("CREATE TABLE IF NOT EXISTS game(Game_Num NUMBER, Home_Team_Num NUMBER, Away_Team_Num NUMBER, Date DATE);");
      db.execSQL("CREATE TABLE IF NOT EXISTS player(Team_Num NUMBER,Jersery_Num NUMBER,Last_Name VARCHAR,First_Name VARCHAR);");
      db.execSQL("CREATE TABLE IF NOT EXISTS team(Team_Num NUMBER,Team_Name VARCHAR);");
      db.execSQL("CREATE TABLE IF NOT EXISTS stats(Stat_Num NUMBER,Jersey_Num NUMBER,Team_Num NUMBER,Game_Num NUMBER,
      Half_Time NUMBER,Action VARCHAR2,X_Cord NUMBER,Y_Cord NUMBER);");
      }
      
      //Seperate public voids
public void onClick(View View)
{
//Adding a record
if(view == btnAdd)
//Checking the empty fields
  {
    if(editGame_Num.getText().toString().trim().length()==0||
       editHome_Team_Num.getText().toString().trim().length()==0||
       editAway_Team_Num.getText().toString().trim().length()==0)
       //Not sure about the DATE again and also got be getNumber() instead of getText()
    {
      showMessage("Error" , "Please enter all values");
      return;
    }
  //Inserting a record
    db.execSQL("INSERT INTO game VALUES('"+editGame_Num.getText() + "','" + editHome_Team_Num.getText() +
    "','" +editAway_Team_Num.getText() + "');");
    showMessage("Success","Row added");//Make sure the row is added
    clearText();
    }
    
//Deleteing a row    
if(view==btnDelete)
        {
        // Checking empty roll number
            if(editGame_Num.getText().toString().trim().length()==0)
            {
                showMessage("Error", "Please enter Game Number");
                return;
            }
        // Searching Game number
            Cursor c=db.rawQuery("SELECT * FROM game WHERE Game_Num='"+editGame_Num.getText()+"'", null);
            if(c.moveToFirst())
            {
            // Deleting record if found
                db.execSQL("DELETE FROM game WHERE Game_num='"+editGame_Num.getText()+"'");
                showMessage("Success", "Record Deleted");
            }
            else
            {
                showMessage("Error", "Invalid Game Number");
            }
            clearText();
        }//Might on need the UID for the deleting for the whole entire row
    // Modifying a record
        if(view==btnModify)
        {
        // Checking empty Game Number
            if(editGame_Num.getText().toString().trim().length()==0)
            {
                showMessage("Error", "Please enter Game Number");
                return;
            }
        // Searching Game Number
            Cursor c=db.rawQuery("SELECT * FROM game WHERE Game_Num='"+editGame_Num.getText()+"'", null);
            if(c.moveToFirst())
            {
            // Modifying record if found
                db.execSQL("UPDATE game SET  Home_Team_Num ='"+edit Home_Team_Num.getText()+"',Away_Team_Num='"+editMarks.getText()+
                        "' WHERE Game_Num='"+editGame_Num.getText()+"'");
                showMessage("Success", "Record Modified");
            }
            else
            {
                showMessage("Error", "Invalid Game Number");
            }
            clearText();
        }
        
        
        
        
          // Viewing all records
        if(view==btnViewAll)
        {
        // Retrieving all records     
            Cursor c=db.rawQuery("SELECT * FROM game", null);
        // Checking if no records found
            if(c.getCount()==0)
            {
                showMessage("Error", "No records found");
                return;
            }
        // Appending records to a string buffer
            StringBuffer buffer=new StringBuffer();
            while(c.moveToNext())
            {
                buffer.append("Game_Num: "+c.getString(0)+"\n");
                buffer.append("Home_Team_Num: "+c.getString(1)+"\n");
                buffer.append("Away_Team_Num: "+c.getString(2)+"\n\n");
                buffer.append("Date: " +c.getString(3)+"\n\n");//Not to sure about this
            }
        // Displaying all records
            showMessage("Game Details", buffer.toString());
        }
    // Displaying info
        if(view==btnShowInfo)
        {
        showMessage("Basketball Management Application", "Developed By CaSe 2015");
        }
    }

